apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus
        args:
        - -c
        - |
          sed 's/@@PROMETHEUS_USER@@/$(PROMETHEUS_USER)/g; s/@@PROMETHEUS_PASSWORD@@/$(PROMETHEUS_PASSWORD)/g;'  /tmp/prometheus/prometheus.yml.tmpl  > /tmp/prometheus.yml \
          && /bin/prometheus --config.file=/tmp/prometheus.yml \
            --log.level=info --query.max-concurrency=100 --query.timeout=2m --storage.tsdb.path=/prometheus \
            --storage.tsdb.min-block-duration=2h --storage.tsdb.max-block-duration=2h \
            --storage.tsdb.retention=12h --storage.tsdb.no-lockfile --alertmanager.timeout=1ms
        
        command:
          - /bin/sh
        # args:
        #   - '--storage.tsdb.retention=6h'
        #   - '--storage.tsdb.path=/prometheus'
        #   - '--config.file=/etc/prometheus/prometheus.yml'
        ports:
        - name: web
          containerPort: 9090
        volumeMounts:
        - name: prometheus-config-volume
          mountPath: /tmp/prometheus
        # - name: prometheus-storage-volume
        #   mountPath: /prometheus
        envFrom:
          - secretRef:
              name: monitor-secrets
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
            

      restartPolicy: Always

      volumes:
      - name: prometheus-config-volume
        configMap:
            # defaultMode: 420
            name: prometheus-config

---
apiVersion: v1
kind: Service
metadata:
    name: prometheus-service
    namespace: monitoring
    annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port:   '9090'

spec:
    selector:
        app: prometheus
    type: NodePort
    ports:
    - port: 8080
      targetPort: 9090 
      nodePort: 31000